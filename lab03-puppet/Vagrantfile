#Vagrant.require_plugin "vagrant-windows"

Vagrant.configure("2") do |config|
  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.

  config.vm.define "master" do |master|
    master.vm.box = "centos-6.5-64-nocm"

    master.vm.provider :virtualbox do |v, override|
      override.vm.network :private_network, ip: "192.168.0.6"
      # Use the host's DNS resolver
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    end

    master.vm.synced_folder "puppet/box_modules", "/etc/puppet/modules"
    master.vm.synced_folder "puppet/manifests", "/etc/puppet/manifests"

    master.vm.provision :shell, :path => "shell/linux/PuppetInstallMaster.sh"
    master.vm.provision :shell, :inline => 'echo "192.168.0.6  puppet" >> /etc/hosts'
  end

  config.vm.define "centos" do |centos|
    centos.vm.box = "centos-6.5-64-nocm"

    centos.vm.provider :virtualbox do |v, override|
      override.vm.network :private_network, ip: "192.168.0.7"
      # Use the host's DNS resolver
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    end

    centos.vm.provision :shell, :path => "shell/linux/PuppetInstallCentOS.sh"
    centos.vm.provision :shell, :inline => 'echo "192.168.0.6  puppet" >> /etc/hosts'
  end

  config.vm.define "ubuntu" do |ubuntu|
    ubuntu.vm.box = "ubuntu-12.04-64-nocm"

    ubuntu.vm.provider :virtualbox do |v, override|
      override.vm.network :private_network, ip: "192.168.0.8"
      # Use the host's DNS resolver
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    end

    ubuntu.vm.provision :shell, :path => "shell/linux/PuppetInstallUbuntu.sh"
    ubuntu.vm.provision :shell, :inline => 'echo "192.168.0.6  puppet" >> /etc/hosts'
  end

  config.vm.define "win2012" do |win2012|
    # Every Vagrant virtual environment requires a box to build off of.
    win2012.vm.box = "win2012r2x64"
   # Max time to wait for the guest to shutdown
    win2012.windows.halt_timeout = 20
    # Admin user name and password
    win2012.winrm.username = "vagrant"
    win2012.winrm.password = "vagrant"
    # Configure base box parameters
    win2012.vm.guest = :windows
    # Port forward WinRM and RDP
    win2012.vm.network :forwarded_port, guest: 5985, host: 5985, id: "winrm", auto_correct: true

    # Provider-specific configuration so you can fine-tune various
    # backing providers for Vagrant. These expose provider-specific options.
    win2012.vm.provider :virtualbox do |v, override|
      override.vm.network :private_network, ip: "192.168.0.12"
      # Don't boot with headless mode
      v.gui = true
      # Use the host's DNS resolver
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      # Use VBoxManage to customize the VM. For example to change memory:
      #v.customize ["modifyvm", :id, "--memory", "1024"]
    end

    # Share an additional folder to the guest VM. The first argument is
    # the path on the host to the actual folder. The second argument is
    # the path on the guest to mount the folder. And the optional third
    # argument is a set of non-required options.
    # config.vm.synced_folder "../data", "/vagrant_data"
    #win2012.vm.synced_folder "puppet/box_modules", "/ProgramData/PuppetLabs/puppet/etc/modules"

    # This shell provisioner installs chocolatey and puppet. Also runs librarian-puppet.
    win2012.vm.provision :shell, :path => "shell/windows/main.cmd"
    # Enable provisioning with Puppet stand alone.  Puppet manifests
    # are contained in a directory path relative to this Vagrantfile.
    #config.vm.provision :puppet, :options => ["--debug --trace --verbose"] do |puppet|
    # win2012.vm.provision :puppet do |puppet|
    #   puppet.manifests_path = "puppet/manifests"
    #   puppet.manifest_file  = "provision.pp"
    #   puppet.module_path = "puppet/modules"
    # end
  end
end
